
remdep ( [xi, eta, sigma, rho] );

depend ( [xi, eta, sigma, rho], [x,y] );


####################################################################################
#
#   Groups g 4, 17
#
#



dcancoord_g4_17_generic := proc ( jb, fs, typinfo, knownsols1 )

local 	knownsols,
		fs1,
		jb1,
		sbyxy,
		xx00v,
		yy00v,
		rsys,
		ff,
		loes,
		res;


if assigned ( _rcgcnstnts ) then

	knownsols := subs ( _rcgcnstnts, knownsols1 );

else

	knownsols := knownsols1;

fi;


# Prolog

fs1 := [xi, eta];

jb1 := dchangefs ( jb, fs, fs1 );


# berechene s aus sx, sy

sbyxy := dgetresolve ( typinfo, jb1, fs1, ID_SBYXY );

xx00v := dgenQuadr ( op ( sbyxy ), [x,y] );


# berechne r aus einer verallgem. lin. Gl. 5. Ordnung.


rsys := dgetsavedexpr ( typinfo, ID_RSYS );

ff := RRX ( x, y );

rsys := dresolve ( typinfo, jb1, fs1, rsys );

debugprint ( rsys );

loes := xpdesolve ( rsys, [ff], basis );

loes := xpdegensol ( loes, subs ( SIGMA = xx00v, knownsols ) );

yy00v := rhs ( loes[1] );




res := dsimplify ( [ xx00v, yy00v] );
	

res :=  [ [], res, [] ];

end;




cancoordsetup_g4_17_generic := proc ( tt1 )

local 	tt,
		sbyxy,
		uu,
		res,
		rxsys1,
		rxsys2,
		ryy;

tt := op ( tt1 );

iginits ( [tt, ffff] );

sbyxy := igreduce ( [tt, ffff], [sx, sy] );

igsaveexpr ( ID_SBYXY, sbyxy );

uu := igtostdform ( r );


res := igcoeffbase ( [tt, ffff] );

res := res[3..-1];

res := eq2expr ( res );

res := subs ( rho = RRX ( x, y ), res );

igsaveexpr ( ID_RSYS, res );



iginits ( [tt, tfff] );

sbyxy := igreduce ( [tt, tfff], [sx, sy] );

igsaveexpr ( ID_SBYXY, sbyxy );

uu := igtostdform ( r );


res := igcoeffbase ( [tt, tfff] );

res := res[3..-1];

res := eq2expr ( res );

res := subs ( rho = RRX ( x, y ), res );

igsaveexpr ( ID_RSYS, res );


iginits ( [tt, ftff] );

sbyxy := igreduce ( [tt, ftff], [sx, sy] );

igsaveexpr ( ID_SBYXY, sbyxy );

uu := igtostdform ( r );;


res := igcoeffbase ( [tt, ftff] );

res := res[3..-1];

res := eq2expr ( res );

res := subs ( rho = RRX ( x, y ), res );

igsaveexpr ( ID_RSYS, res );


end;
